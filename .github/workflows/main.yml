# This is a basic workflow to help you get started with Actions

name: Build

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  buildLinux:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true

      - uses: krdlab/setup-haxe@master
        with:
          haxe-version: 4.2.5
      
      - name: Install Core Haxelib
        run: |
          haxelib setup ~/haxelib
          haxelib install hxcpp > /dev/null
          haxelib install format --quiet
          haxelib install hxp --quiet
          haxelib install lime --quiet
          haxelib run lime setup -- quiet
          haxelib install openfl --quiet
      
      - name: Install Haxelib
        run: |
          sudo apt-get install libvlc-dev
          sudo apt-get install libvlccore-dev
          haxelib run lime setup flixel --quiet
          haxelib install flixel-tools --quiet
          haxelib install flixel-ui --quiet
          haxelib install flixel-addons --quiet
          haxelib install tjson --quiet
          haxelib install hxjsonast --quiet
          haxelib git hxCodec https://github.com/polybiusproxy/hxCodec --quiet
          haxelib git linc_luajit https://github.com/nebulazorua/linc_luajit --quiet
          haxelib install hscript --quiet
          haxelib git hscript-ex https://github.com/ianharrigan/hscript-ex --quiet
          haxelib git discord_rpc https://github.com/Aidan63/linc_discord-rpc --quiet
          haxelib install hxcpp-debug-server --quiet
          haxelib install noisehx
      
      - name: Check Haxelib List
        run: haxelib list
      
      - name: Create Version Tag
        run: echo "${{github.run_id}}" > VERSION
      
      - name: Compile
        run: haxelib run openfl build Project.xml linux -64 --app-version="4.0.0-${{ github.run_id}}"
      
      - name: Publish Artifact 64-bit
        uses: actions/upload-artifact@v2.2.4
        with:
          name: Linux64
          path: 'export/release/linux/bin'
          if-no-files-found: error
      
  buildWindows:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v2.3.0
        with:
          submodules: true

      - uses: krdlab/setup-haxe@master
        with:
          haxe-version: 4.2.5
      
      - name: Install Core Haxelib
        run: |
          haxelib setup C:/haxelib
          haxelib install hxcpp > nul --quiet
          haxelib install format --quiet
          haxelib install hxp --quiet
          haxelib install lime --quiet
          haxelib run lime setup -- quiet
          haxelib install openfl --quiet
        shell: cmd
      
      - name: Install Haxelib
        run: |
          haxelib run lime setup flixel --quiet
          haxelib install flixel-tools --quiet
          haxelib install flixel-ui --quiet
          haxelib install flixel-addons --quiet
          haxelib install tjson --quiet
          haxelib install hxjsonast --quiet
          haxelib git hxCodec https://github.com/polybiusproxy/hxCodec --quiet
          haxelib git linc_luajit https://github.com/nebulazorua/linc_luajit --quiet
          haxelib install hscript --quiet
          haxelib git hscript-ex https://github.com/ianharrigan/hscript-ex --quiet
          haxelib git discord_rpc https://github.com/Aidan63/linc_discord-rpc --quiet
          haxelib install hxcpp-debug-server --quiet
          haxelib install noisehx
        shell: cmd
      
      - name: Check Haxelib List
        run: haxelib list
      
      - name: Create Version Tag
        run: echo "${{github.run_id}}" > VERSION
      
      - name: Compile
        run: haxelib run openfl build windows -64 --app-version="4.0.0-${{ github.run_id}}"
      
      - name: Publish Artifact 64-bit
        uses: actions/upload-artifact@v2.2.4
        with:
          name: Windows64
          path: 'export/release/windows/bin'
          if-no-files-found: error
      
  buildMac:
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true

      - uses: krdlab/setup-haxe@master
        with:
          haxe-version: 4.2.5
      
      - name: Install Core Haxelib
        run: |
          haxelib setup ~/haxelib
          haxelib install hxcpp > /dev/null --quiet
          haxelib install format --quiet
          haxelib install hxp --quiet
          haxelib install lime --quiet
          haxelib run lime setup -- quiet
          haxelib install openfl --quiet
      
      - name: Install Haxelib
        run: |
          haxelib run lime setup flixel --quiet
          haxelib install flixel-tools --quiet
          haxelib install flixel-ui --quiet
          haxelib install flixel-addons --quiet
          haxelib install tjson --quiet
          haxelib install hxjsonast --quiet
          haxelib git hxCodec https://github.com/polybiusproxy/hxCodec --quiet
          haxelib git linc_luajit https://github.com/nebulazorua/linc_luajit --quiet
          haxelib install hscript --quiet
          haxelib git hscript-ex https://github.com/ianharrigan/hscript-ex --quiet
          haxelib git discord_rpc https://github.com/Aidan63/linc_discord-rpc --quiet
          haxelib install hxcpp-debug-server --quiet
          haxelib install noisehx
      
      - name: Check Haxelib List
        run: haxelib list
      
      - name: Create Version Tag
        run: echo "${{github.run_id}}" > VERSION
      
      - name: Compile
        run: haxelib run lime build mac -64 --app-version="4.0.0-${{ github.run_id}}"
      
      - name: Publish Artifact 64-bit
        uses: actions/upload-artifact@v2.2.4
        with:
          name: Mac64
          path: 'export/release/macos/bin'
